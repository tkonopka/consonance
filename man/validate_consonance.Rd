% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate.R
\name{validate_consonance}
\alias{validate_consonance}
\alias{validate}
\title{check consonance of an object with a suite of tests}
\usage{
validate_consonance(
  x,
  suite,
  level = NA,
  skip = FALSE,
  skip.action = c("log", "none"),
  logging.level = NA,
  log.file = NA
)

validate(x, suite, ...)
}
\arguments{
\item{x}{data object}

\item{suite}{object of class consonance}

\item{level}{character, strictness level, use "warning" or "error" to
determine the minimal criteria to halt execution}

\item{skip}{logical, set to TRUE to skip all tests}

\item{skip.action}{character, determines what happens when skip=TRUE.
Action 'log' sends an INFO message to the logger, 'none' is silent.}

\item{logging.level}{character, code to indicate logging level;
leave NA to use the logging level specified in suite constructor;
set NULL to avoid logging altogether}

\item{log.file}{character, path to log file, or leave NA to follow
the logger set up within suite}
}
\value{
object x, unchanged
}
\description{
The function always returns its primary input and should be invoked
for its side effects. It stops when a data
}
\examples{

# create a test or a suite with a test
test_1 <- consonance_test("a numeric", is.numeric)
suite_1 <- consonance_suite() + test_1

# applying the test or suite on numeric data
# should execute without visible output
test_consonance(c(1, 2, 3), test_1)
test_consonance(c(1, 2, 3), suite_1)

# applying the test or suite on non-numeric data
# should produce message and stop execution
# test_consonance(letters, test_1)
# test_consonance(letters, suite_1)

}
